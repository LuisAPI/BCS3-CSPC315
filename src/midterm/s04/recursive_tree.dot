digraph RecursiveTree {
Node0 [label="n = 16"];
Node0 -> Node1;
Node1 [label="n = 8"];
Node1 -> Node2;
Node2 [label="n = 4"];
Node2 -> Node3;
Node3 [label="n = 2"];
Node3 -> Node4;
Node4 [label="1"];
Node3 -> Node5;
Node5 [label="1"];
Node2 -> Node6;
Node6 [label="n = 2"];
Node6 -> Node7;
Node7 [label="1"];
Node6 -> Node8;
Node8 [label="1"];
Node1 -> Node9;
Node9 [label="n = 4"];
Node9 -> Node10;
Node10 [label="n = 2"];
Node10 -> Node11;
Node11 [label="1"];
Node10 -> Node12;
Node12 [label="1"];
Node9 -> Node13;
Node13 [label="n = 2"];
Node13 -> Node14;
Node14 [label="1"];
Node13 -> Node15;
Node15 [label="1"];
Node0 -> Node16;
Node16 [label="n = 8"];
Node16 -> Node17;
Node17 [label="n = 4"];
Node17 -> Node18;
Node18 [label="n = 2"];
Node18 -> Node19;
Node19 [label="1"];
Node18 -> Node20;
Node20 [label="1"];
Node17 -> Node21;
Node21 [label="n = 2"];
Node21 -> Node22;
Node22 [label="1"];
Node21 -> Node23;
Node23 [label="1"];
Node16 -> Node24;
Node24 [label="n = 4"];
Node24 -> Node25;
Node25 [label="n = 2"];
Node25 -> Node26;
Node26 [label="1"];
Node25 -> Node27;
Node27 [label="1"];
Node24 -> Node28;
Node28 [label="n = 2"];
Node28 -> Node29;
Node29 [label="1"];
Node28 -> Node30;
Node30 [label="1"];
}
